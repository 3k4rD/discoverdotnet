#n Wyam.Yaml
#n Wyam.Razor
#n Wyam.Markdown
#n Octokit

using Octokit;

Pipelines.Add("Projects",
    ReadFiles("projects/*.md"),
    FrontMatter(Yaml()),    
    Execute((doc, ctx) =>
    {
        // Extract the GitHub owner and name
        Uri source;
        if(Uri.TryCreate(doc.String("Source"), UriKind.Absolute, out source)
            && source.Host.EndsWith("github.com", StringComparison.OrdinalIgnoreCase))
        {
            string owner = source.Segments[1].Trim('/');
            string name = source.Segments[2].Trim('/');

            // Connect to GitHub and get the repository
            GitHubClient github = new GitHubClient(new ProductHeaderValue("discoverdotnet"));
            Repository repository = github.Repository.Get(owner, name).Result;

            // Return a document with GitHub metadata
            return ctx.GetDocument(doc, new MetadataItems
            {
                { "StargazersCount", repository.StargazersCount },
                { "ForksCount", repository.ForksCount },
                { "OpenIssuesCount", repository.OpenIssuesCount }
            });
        }
        return doc;
    }),
    Razor()
        .WithLayout("/_Layout.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("Pages",
    ReadFiles("**/{!_,}*.cshtml"),
    FrontMatter(Yaml()),
    Razor()
        .WithLayout("/_Layout.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("Resources",
    CopyFiles("**/*{!.cshtml,!.md,!.less,!.yml,}")
);